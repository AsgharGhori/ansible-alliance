# == List Script ==
# Includes all the tasks that fall under
# the Unclassed SI-3 protocol requirements

# Expected vars/facts:
# - MachineDefaults {} (populated)
---
# Init task dictionaries
- name: Set SI-3 regedit task dictionary
  set_fact:
    UN_SI_3_RegTasks:
    - { Desc: "Boot-Start Driver Initialization Policy is set to Enabled Good, unknown and bad but critical",
      ID: A, Value: 3, Type: dword, Name: DriverLoadPolicy,
      Path: 'HKLM:\SYSTEM\CurrentControlSet\Policies\EarlyLaunch' }
    - { Desc: Prevent downloading of enclosures is set to Enabled,
      ID: B, Value: 1, Type: dword, Name: DisableEnclosureDownload,
      Path: 'HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\Feeds' }
    - { Desc: Notify antivirus programs when opening attachments is set to Enabled,
      ID: C, Value: 3, Type: dword, Name: ScanWithAntiVirus,
      Path: 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Attachments' }
    - { Desc: Turn off Data Execution Prevention for Explorer is set to Disabled,
      ID: D, Value: 0, Type: dword, Name: NoDataExecutionPrevention,
      Path: 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer' }
    - { Desc: Turn off heap termination on corruption is set to Disabled,
      ID: E, Value: 0, Type: dword, Name: NoHeapTerminationOnCorruption,
      Path: 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer' }

# Init and get defaults
- name: Check if defaults for SI-3 were loaded
  set_fact:
    Loaded_UN_SI_3: "{{ 'UN_SI_3' in MachineDefaults }}"

- name: Initialize UndoList
  set_fact:
    UndoList: "{{ UndoList + ['UN_SI_3_'+item.ID] }}"
  loop: "{{ UN_SI_3_RegTasks }}"
  when: "'UN_SI_3' in UndoList"

- name: Get regedit defaults
  include_tasks: WinRegStat.yml
  vars:
    SecCat: UN
    TaskCat: SI_3
    RegTasks: "{{ UN_SI_3_RegTasks }}"
  when: not Loaded_UN_SI_3

# Run tasks
- name: Run regedit tasks
  include_tasks: WinRegedit.yml
  vars:
    SecCat: UN
    TaskCat: SI_3
  loop: "{{ UN_SI_3_RegTasks }}"
  loop_control:
    loop_var: RegTask

# OLD
# - name: UN_SI_3 ? > Check for UN_SI_3 defaults entry
#   set_fact:
#     HasUNSI3Def: "{{ 'UN_SI_3' in RegistryDefaults }}"

# - name: UN_SI_3 = > Get keys if UN_SI_3 is not 'present'
#   win_reg_stat:
#     path: "{{ item.path }}"
#     name: "{{ item.name }}"
#   register: UN_SI3_DefKeys
#   loop:
#     - { taskID: A, path: 'HKLM:\SYSTEM\CurrentControlSet\Policies\EarlyLaunch', name: DriverLoadPolicy }
#     - { taskID: B, path: 'HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\Feeds', name: DisableEnclosureDownload }
#     - { taskID: C, path: 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Attachments', name: ScanWithAntiVirus }
#     - { taskID: D, path: 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer', name: NoDataExecutionPrevention }
#     - { taskID: E, path: 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer', name: NoHeapTerminationOnCorruption }
#   when: not HasUNSI3Def

# - name: UN_SI_3 + > Add keys to a dictionary
#   set_fact:
#     UN_SI_3_Def: "{{ UN_SI_3_Def|default({}) | combine( {item.item.taskID: (item.value if item.exists else 4294967295)} ) }}"
#   loop: "{{ UN_SI3_DefKeys.results }}"
#   when: not HasUNSI3Def

# - name: UN_SI_3 ++ > Add dictionary to RegistryDefaults dictionary
#   set_fact:
#     RegistryDefaults: "{{ RegistryDefaults | combine({'UN_SI_3':UN_SI_3_Def}) }}"
#   when: not HasUNSI3Def

# - name: UN_SI_3 IO > Write dictionary
#   win_copy:
#     dest: "{{ RegDefaultsPath }}"
#     content: "{{ RegistryDefaults }}"
#   when: not HasUNSI3Def

# # Tasks
# - name: UN_SI_3 A > Boot-Start Driver Initialization Policy is set to Enabled Good, unknown and bad but critical
#   win_regedit:
#     path: HKLM:\SYSTEM\CurrentControlSet\Policies\EarlyLaunch
#     name: DriverLoadPolicy
#     data: "{{ 3 if undo_UN_SI_3 is not defined else RegistryDefaults.UN_SI_3.A }}"
#     type: dword
#     state: "{{'absent' if undo_UN_SI_3 is defined and RegistryDefaults.UN_SI_3.A == 4294967295 else 'present'}}"
#   when: skip_UN_SI_3_A is not defined

# - name: UN_SI_3 B > Prevent downloading of enclosures is set to Enabled
#   win_regedit:
#     path: HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\Feeds
#     name: DisableEnclosureDownload
#     data: "{{ 1 if undo_UN_SI_3 is not defined else RegistryDefaults.UN_SI_3.B }}"
#     type: dword
#     state: "{{'absent' if undo_UN_SI_3 is defined and RegistryDefaults.UN_SI_3.B == 4294967295 else 'present'}}"
#   when: skip_UN_SI_3_B is not defined

# - name: UN_SI_3 C > Notify antivirus programs when opening attachments is set to Enabled
#   win_regedit:
#     path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Attachments
#     name: ScanWithAntiVirus
#     data: "{{ 3 if undo_UN_SI_3 is not defined else RegistryDefaults.UN_SI_3.C }}"
#     type: dword
#     state: "{{'absent' if undo_UN_SI_3 is defined and RegistryDefaults.UN_SI_3.C == 4294967295 else 'present'}}"
#   when: skip_UN_SI_3_C is not defined

# - name: UN_SI_3 D > Turn off Data Execution Prevention for Explorer is set to Disabled
#   win_regedit:
#     path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer
#     name: NoDataExecutionPrevention
#     data: "{{ 0 if undo_UN_SI_3 is not defined else RegistryDefaults.UN_SI_3.D }}"
#     type: dword
#     state: "{{'absent' if undo_UN_SI_3 is defined and RegistryDefaults.UN_SI_3.D == 4294967295 else 'present'}}"
#   when: skip_UN_SI_3_D is not defined

# - name: UN_SI_3 E > Turn off heap termination on corruption is set to Disabled
#   win_regedit:
#     path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer
#     name: NoHeapTerminationOnCorruption
#     data: "{{ 0 if undo_UN_SI_3 is not defined else RegistryDefaults.UN_SI_3.E }}"
#     type: dword
#     state: "{{'absent' if undo_UN_SI_3 is defined and RegistryDefaults.UN_SI_3.E == 4294967295 else 'present'}}"
#   when: skip_UN_SI_3_E is not defined