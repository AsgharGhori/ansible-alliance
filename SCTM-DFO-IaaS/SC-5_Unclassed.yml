---
# Called from Windows-Rollback.yml
# Includes all the tasks that fall under
# the SC-5 protocol requirements

# Imported vars: RegDefaultsPath RegistryDefaults

- name: SC-5 ? > Check for SC_5 defaults entry
  set_fact:
    HasSC5Def: "{{ 'SC_5' in RegistryDefaults }}"

- debug:
    var: HasSC5Def

- name: SC-5 ? > Get keys if SC-5 is not present
  win_reg_stat:
    path: "{{ item.path }}"
    name: "{{ item.name }}"
  register: SC5_Results
  loop:
    - { taskID: A, path: 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU', name: NoAutoRebootWithLoggedOnUsers }
    - { taskID: B, path: 'HKLM:\SYSTEM\CurrentControlSet\Services\TCPIP6\Parameters', name: TcpMaxDataRetransmissions }
    - { taskID: C, path: 'HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters', name: TcpMaxDataRetransmissions }
    - { taskID: D, path: 'HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters', name: KeepAliveTime }
    - { taskID: E, path: 'HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters', name: PerformRouterDiscovery }
  when: not HasSC5Def

- name: SC-5 ! > Add keys to a dictionary
  set_fact:
    SC_5_Def: "{{ SC_5_Def|default({}) | combine( {item.item.taskID: (item.value if item.exists else 'absent')} ) }}"
  loop: "{{ SC5_Results.results }}"
  when: not HasSC5Def

- name: SC-5 + > Add dictionary to RegistryDefault dictionary
  set_fact:
    RegistryDefaults: "{{ RegistryDefaults | combine({'SC_5': SC_5_Def }) }}"
  when: not HasSC5Def

- name: SC_5 IO ? Write dictionary
  win_copy:
    dest: "{{ RegDefaultsPath }}"
    content: "{{ DefReg }}"
  when: not HasSC5Def

- name: SC-5 @ > Debug dictionary
  debug:
    var: RegistryDefaults.SC_5
  when: not skip_SC_5

# - name: SC-5 A > Set computer to restart for updates even if user(s) logged in
#   win_regedit:
#     path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU
#     name: NoAutoRebootWithLoggedOnUsers
#     data: "{{ 0 if SC_5 else RegistryDefaults.SC_5.A }}"
#     type: dword
#   when: not skip_SC_5

# - name: SC-5 B > Limit unacknowledged data retransmission (IPv6)
#   win_regedit:
#     path: HKLM:\SYSTEM\CurrentControlSet\Services\TCPIP6\Parameters
#     name: TcpMaxDataRetransmissions
#     data: "{{ 3 if SC_5 else RegistryDefaults.SC_5.B }}"
#     type: dword
#   when: not skip_SC_5

# - name: SC-5 C > Limit unacknowledged data retransmission
#   win_regedit:
#     path: HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters
#     name: TcpMaxDataRetransmissions
#     data: "{{ 3 if SC_5 else RegistryDefaults.SC_5.C }}"
#     type: dword
#   when: not skip_SC_5

# - name: SC-5 D > Set keep-alive packet send interval
#   win_regedit:
#     path: HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters
#     name: KeepAliveTime
#     data: "{{ 300000 if SC_5 else RegistryDefaults.SC_5.D }}"
#     type: dword
#   when: not skip_SC_5

# - name: SC-5 E > Disable IRDP Default Gateway configuration
#   win_regedit:
#     path: HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters
#     name: PerformRouterDiscovery
#     data: "{{ 0 if SC_5 else RegistryDefaults.SC_5.E }}"
#     type: dword
#   when: not skip_SC_5