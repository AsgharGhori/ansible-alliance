# == List Script ==
# Includes all the tasks that fall under
# the Unclassed IA-5 protocol requirements

# Expected vars/facts:
# - MachineDefaults {} (populated)
---
# Init task dictionaries
- name: Set IA-5 regedit task dictionary
  set_fact:
    UN_IA_5_RegTasks:
    - { Desc: Allow domain members to change their account passwords,
      ID: A, Value: 0, Type: dword, Name: DisablePasswordChange,
      Path: 'HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters' }
    - { Desc: Prevent plaintext storage of credentials,
      ID: B, Value: 0, Type: dword, Name: UseLogonCredential,
      Path: 'HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest' }
    - { Desc: "Enforce better client authentication than 'Basic'",
      ID: C, Value: 0, Type: dword, Name: AllowBasic,
      Path: 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Client' }
    - { Desc: "Enforce better client authentication than 'Digest'",
      ID: D, Value: 0, Type: dword, Name: AllowDigest,
      Path: 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Client' }
    - { Desc: "Enforce better service authentication than 'Basic'",
      ID: E, Value: 0, Type: dword, Name: AllowBasic,
      Path: 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service' }
    - { Desc: "Prevent storage of RunAs credentials",
      ID: F, Value: 1, Type: dword, Name: DisableRunAs,
      Path: 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service' }
    - { Desc: "Ensure installation of password handling extension",
      ID: G, Value: 'C:\\Program Files\\LAPS\\CSE\\AdmPwd.dll', Type: string, Name: DllName,
      Path: 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\GPExtensions\{D76B9641-3288-4f75-942D-087DE603E3EA}' }
    - { Desc: "Restrict password expiration time",
      ID: H, Value: 1, Type: dword, Name: PwdExpirationProtectionEnabled,
      Path: 'HKLM:\SOFTWARE\Policies\Microsoft Services\AdmPwd' }
    - { Desc: "Set local admin to manage password",
      ID: I, Value: 1, Type: dword, Name: AmdPwdEnabled,
      Path: 'HKLM:\SOFTWARE\Policies\Microsoft Services\AdmPwd' }
    - { Desc: "Enforce password complexity",
      ID: J, Value: 1, Type: dword, Name: PasswordComplexity,
      Path: 'HKLM:\SOFTWARE\Policies\Microsoft Services\AdmPwd' }
    - { Desc: "Set min password length to 15",
      ID: K, Value: 15, Type: dword, Name: PasswordLength,
      Path: 'HKLM:\SOFTWARE\Policies\Microsoft Services\AdmPwd' }
    - { Desc: "Enforce changing passwords every 30 days minimum",
      ID: L, Value: 30, Type: dword, Name: PasswordAgeDays,
      Path: 'HKLM:\SOFTWARE\Policies\Microsoft Services\AdmPwd' }

# Init and get defaults
- name: Check if defaults for IA-5 were loaded
  set_fact:
    Loaded_UN_IA_5: "{{ 'UN_IA_5' in MachineDefaults }}"

- name: Initialize UndoList
  set_fact:
    UndoList: "{{ UndoList + ['UN_IA_5_'+item.ID] }}"
  loop: "{{ UN_IA_5_RegTasks }}"
  when: "'UN_IA_5' in UndoList"

- name: Get regedit defaults
  include_tasks: WinRegStat.yml
  vars:
    SecCat: UN
    TaskCat: IA_5
    RegTasks: "{{ UN_IA_5_RegTasks }}"
  when: not Loaded_UN_IA_5

# Run tasks
- name: Run regedit tasks
  include_tasks: WinRegedit.yml
  vars:
    SecCat: UN
    TaskCat: IA_5
  loop: "{{ UN_IA_5_RegTasks }}"
  loop_control:
    loop_var: RegTask

# OLD
# - name: UN_IA_5 ? > Check for UN_IA_5 defaults entry
#   set_fact:
#     HasUNIA5Def: "{{ 'UN_IA_5' in RegistryDefaults }}"

# - name: UN_IA_5 = > Get keys in UN_IA_5 is not 'present'
#   win_reg_stat:
#     path: "{{ item.path }}"
#     name: "{{ item.name }}"
#   register: UN_IA5_DefKeys
#   loop:
#     - { ID: A, path: 'HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters', name: DisablePasswordChange }
#     - { ID: B, path: 'HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest', name: UseLogonCredential }
#     - { ID: C, path: 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Client', name: AllowBasic }
#     - { ID: D, path: 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Client', name: AllowDigest }
#     - { ID: E, path: 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service', name: AllowBasic }
#     - { ID: F, path: 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service', name: DisableRunAs }
#     - { ID: G, path: 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\GPExtensions\{D76B9641-3288-4f75-942D-087DE603E3EA}', name: DllName }
#     - { ID: H, path: 'HKLM:\SOFTWARE\Policies\Microsoft Services\AdmPwd', name: PwdExpirationProtectionEnabled }
#     - { ID: I, path: 'HKLM:\SOFTWARE\Policies\Microsoft Services\AdmPwd', name: AmdPwdEnabled }
#     - { ID: J, path: 'HKLM:\SOFTWARE\Policies\Microsoft Services\AdmPwd', name: PasswordComplexity }
#     - { ID: K, path: 'HKLM:\SOFTWARE\Policies\Microsoft Services\AdmPwd', name: PasswordLength }
#     - { ID: L, path: 'HKLM:\SOFTWARE\Policies\Microsoft Services\AdmPwd', name: PasswordAgeDays }
#   when: not HasUNIA5Def

# - name: UN_IA_5 + > Add keys to a dictionary
#   set_fact:
#     UN_IA_5_Def: "{{ UN_IA_5_Def|default({}) | combine( {item.item.ID: (item.value if item.exists else 4294967295)} ) }}"
#   loop: "{{ UN_IA5_DefKeys.results }}"
#   when: not HasUNIA5Def

# - name: UN_IA_5 ++ > Add dictionary to RegistryDefaults dictionary
#   set_fact:
#     RegistryDefaults: "{{ RegistryDefaults | combine({'UN_IA_5':UN_IA_5_Def}) }}"
#   when: not HasUNIA5Def

# - name: UN_IA_5 IO > Write dictionary
#   win_copy:
#     dest: "{{ RegDefaultsPath }}"
#     content: "{{ RegistryDefaults }}"
#   when: not HasUNIA5Def

# # Tasks
# - name: UN_IA_5 A > Allow domain members to change their account passwords
#   win_regedit:
#     path: HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters
#     name: DisablePasswordChange
#     data: "{{ 0 if undo_UN_IA_5 is not defined else RegistryDefaults.UN_IA_5.A }}"
#     type: dword
#     state: "{{'absent' if (undo_UN_IA_5 is defined and RegistryDefaults.UN_IA_5.A == 4294967295) else 'present'}}"
#   when: skip_UN_IA_5_A is not defined

# - name: UN_IA_5 B > Prevent plaintext storage of credentials
#   win_regedit:
#     path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest
#     name: UseLogonCredential
#     data: "{{ 0 if undo_UN_IA_5 is not defined else RegistryDefaults.UN_IA_5.B }}"
#     type: dword
#     state: "{{'absent' if (undo_UN_IA_5 is defined and RegistryDefaults.UN_IA_5.B == 4294967295) else 'present'}}"
#   when: skip_UN_IA_5_B is not defined

# - name: UN_IA_5 C > Enforce better client authentication than 'Basic'
#   win_regedit:
#     path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Client
#     name: AllowBasic
#     data: "{{ 0 if undo_UN_IA_5 is not defined else RegistryDefaults.UN_IA_5.C }}"
#     type: dword
#     state: "{{'absent' if (undo_UN_IA_5 is defined and RegistryDefaults.UN_IA_5.C == 4294967295) else 'present'}}"
#   when: skip_UN_IA_5_C is not defined

# - name: UN_IA_5 D > Enforce better client authentication than 'Digest'
#   win_regedit:
#     path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Client
#     name: AllowDigest
#     data: "{{ 0 if undo_UN_IA_5 is not defined else RegistryDefaults.UN_IA_5.D }}"
#     type: dword
#     state: "{{'absent' if (undo_UN_IA_5 is defined and RegistryDefaults.UN_IA_5.D == 4294967295) else 'present'}}"
#   when: skip_UN_IA_5_D is not defined

# - name: UN_IA_5 E > Enforce better service authentication than 'Basic'
#   win_regedit:
#     path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service
#     name: AllowBasic
#     data: "{{ 0 if undo_UN_IA_5 is not defined else RegistryDefaults.UN_IA_5.E }}"
#     type: dword
#     state: "{{'absent' if (undo_UN_IA_5 is defined and RegistryDefaults.UN_IA_5.E == 4294967295) else 'present'}}"
#   when: skip_UN_IA_5_E is not defined

# - name: UN_IA_5 F > Prevent storage of RunAs credentials
#   win_regedit:
#     path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service
#     name: DisableRunAs
#     data: "{{ 1 if undo_UN_IA_5 is not defined else RegistryDefaults.UN_IA_5.F }}"
#     type: dword
#     state: "{{'absent' if (undo_UN_IA_5 is defined and RegistryDefaults.UN_IA_5.F == 4294967295) else 'present'}}"
#   when: skip_UN_IA_5_F is not defined

# - name: UN_IA_5 G > Ensure installation of password handling extension
#   win_regedit:
#     path: HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\GPExtensions\{D76B9641-3288-4f75-942D-087DE603E3EA}
#     name: DllName
#     data: "{{ 'C:\\Program Files\\LAPS\\CSE\\AdmPwd.dll' if undo_UN_IA_5 is not defined else RegistryDefaults.UN_IA_5.G }}"
#     type: string
#     state: "{{'absent' if (undo_UN_IA_5 is defined and RegistryDefaults.UN_IA_5.G == 4294967295) else 'present'}}"
#   when: skip_UN_IA_5_G is not defined

# - name: UN_IA_5 H > Restrict password expiration time
#   win_regedit:
#     path: HKLM:\SOFTWARE\Policies\Microsoft Services\AdmPwd
#     name: PwdExpirationProtectionEnabled
#     data: "{{ 1 if undo_UN_IA_5 is not defined else RegistryDefaults.UN_IA_5.H }}"
#     type: dword
#     state: "{{'absent' if (undo_UN_IA_5 is defined and RegistryDefaults.UN_IA_5.H == 4294967295) else 'present'}}"
#   when: skip_UN_IA_5_H is not defined

# - name: UN_IA_5 I > Set local admin to manage password
#   win_regedit:
#     path: HKLM:\SOFTWARE\Policies\Microsoft Services\AdmPwd
#     name: AmdPwdEnabled
#     data: "{{ 1 if undo_UN_IA_5 is not defined else RegistryDefaults.UN_IA_5.I }}"
#     type: dword
#     state: "{{'absent' if (undo_UN_IA_5 is defined and RegistryDefaults.UN_IA_5.I == 4294967295) else 'present'}}"
#   when: skip_UN_IA_5_I is not defined

# - name: UN_IA_5 J > Enforce password complexity
#   win_regedit:
#     path: HKLM:\SOFTWARE\Policies\Microsoft Services\AdmPwd
#     name: PasswordComplexity
#     data: "{{ 1 if undo_UN_IA_5 is not defined else RegistryDefaults.UN_IA_5.J }}"
#     type: dword
#     state: "{{'absent' if (undo_UN_IA_5 is defined and RegistryDefaults.UN_IA_5.J == 4294967295) else 'present'}}"
#   when: skip_UN_IA_5_J is not defined

# - name: UN_IA_5 K > Set min password length to 15
#   win_regedit:
#     path: HKLM:\SOFTWARE\Policies\Microsoft Services\AdmPwd
#     name: PasswordLength
#     data: "{{ 15 if undo_UN_IA_5 is not defined else RegistryDefaults.UN_IA_5.K }}"
#     type: dword
#     state: "{{'absent' if (undo_UN_IA_5 is defined and RegistryDefaults.UN_IA_5.K == 4294967295) else 'present'}}"
#   when: skip_UN_IA_5_K is not defined

# - name: UN_IA_5 L > Enforce changing passwords every 30 days minimum
#   win_regedit:
#     path: HKLM:\SOFTWARE\Policies\Microsoft Services\AdmPwd
#     name: PasswordAgeDays
#     data: "{{ 30 if undo_UN_IA_5 is not defined else RegistryDefaults.UN_IA_5.L }}"
#     type: dword
#     state: "{{'absent' if (undo_UN_IA_5 is defined and RegistryDefaults.UN_IA_5.L == 4294967295) else 'present'}}"
#   when: skip_UN_IA_5_L is not defined