# == Task Script ==
# Contains Tasks for handling all windows registry editing.
# Called from a List Script

# Expected vars/facts:
# - MachineDefaults {} (populated and with SecCat_TaskCat: {} entry)
# - UndoList []
# - SkipList []
# - SecCat
# - TaskCat
# - Loaded
# - RightsTasks [{}] (one object)
#   - Desc
#   - ID
#   - Name
#   - Users []
---
- name: Initialize facts
  set_fact:
    Sec_Task: "{{ SecCat+'_'+TaskCat }}"
    SkipIDs: []

- name: "Check for existing {{ Sec_Task }} user rights defaults"
  set_fact:
    HasDefaults: Sec_Task in MachineDefaults

- name: Load which tasks to skip
  set_fact:
    SkipIDs: "{{ SkipIDs + [item.lstrip(Sec_Task+'_')]
      if Sec_Task in item else SkipIDs }}"
  loop: "{{ SkipList }}"

- name: "{{ Sec_Task+' user rights tasks' }}"
  win_user_right:
    name: "{{ item.Name }}"
    users: "{{ (item.Users if Sec_Task+'_'+item.ID not in CustomDict
      else CustomDict[Sec_Task+'_'+item.ID])
      if (Sec_Task+'_'+item.ID not in UndoList or
      item.ID not in MachineDefaults[Sec_Task]) else
      MachineDefaults[Sec_Task][item.ID] }}"
    action: set
  register: UserDelta
  loop: "{{ RightsTasks }}"

- name: "Check {{ Sec_Task }} dictionary keys"
  set_fact:
    MachineDefaults: "{{ MachineDefaults |combine({ Sec_Task:{} }) }}"
  when: Sec_Task not in MachineDefaults

- name: Add default users to a temp dictionary
  set_fact:
    defaultUsers: "{{ defaultUsers|default({}) |combine({
      item.item.ID: item.item.Users |union(item.removed)
      |difference(item.added) }) }}"
  loop: "{{ UserDelta.results }}"
  when: not Loaded

- name: Append user default to the MachineDefaults dictionary
  set_fact:
    MachineDefaults: "{{ MachineDefaults |combine({ Sec_Task:
      MachineDefaults[Sec_Task] |combine(defaultUsers) }) }}"
  when: not Loaded

- name: Write to MachineDefaults file
  win_copy:
    dest: "{{ MachineDefaultsPath }}"
    content: "{{ MachineDefaults }}"
  when: not Loaded