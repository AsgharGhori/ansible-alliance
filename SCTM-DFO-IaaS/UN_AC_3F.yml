# List Script
# Fake script to test the WinRegedit Task File
---
# Init task dictionaries
- name: Set AC_3F regedit task dictionary
  set_fact:
    AC_3F_RegTasks:
      - { ID: A, Value: 1, Type: dword, Name: LimitBlankPasswordUse, # 1 
      Path: 'HKLM:\SYSTEM\CurrentControlSet\Control\Lsa', 
      Desc: 'Restrict use of blank passwords'}
      - { ID: B, Value: 1, Type: dword, Name: AddPrinterDrivers, # 1
      Path: 'HKLM:\SYSTEM\CurrentControlSet\Control\Print\Providers\LanMan Print Services\Servers', 
      Desc: 'Prevent printer driver installation for non-admins'}
      - { ID: C, Value: 1, Type: dword, Name: ForceUnlockLogon, # 0
      Path: 'HKLM:\Software\Microsoft\Windows NT\CurrentVersion\Winlogon', 
      Desc: 'Require Domain Controller Authentication to unlock computer'}
      - { ID: D, Value: 1, Type: dword, Name: fPromptForPassword, # 4294967295
      Path: 'HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services', 
      Desc: 'Enforce password prompt for RDP'}
      - { ID: E, Value: 0, Type: dword, Name: RequireStrongKey, # 1
      Path: 'HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters', 
      Desc: 'Enforce strong domain session keys'}

- name: Set AC_3F user rights task dictionary
  set_fact:
    AC_3F_RightsTasks:
      - { ID: AA, Name: SeTcbPrivilege, Users: [],
      Desc: Set no one to act as part of the operating system } # []
      - { ID: BB, Name: SeInteractiveLogonRight, Users: ['Administrators'],
      Desc: Only allow admins to log on locally } # [Ad,Us,BaOp]
      - { ID: CC, Name: SeIncreaseQuotaPrivilege,
      Users: ['Network Service','Local Service','Administrators'],
      Desc: Only allow admins to log on locally } # [NtSv,LoSv,Ad]

- name: Set AC_3F command task dictionary
  set_fact:
    AC_3F_ComTasks:
      - { ID: AAA, Value: 5, Command: 'net accounts /lockoutthreshold:',
        LineIdx: 5, Strip: "Lockout threshold:",
        Desc: Set password attempts before lockout to 5 }
      - { ID: BBB, Value: 60, Command: 'net accounts /lockoutduration:',
        LineIdx: 6, Strip: "Lockout duration (minutes):",
        Desc: Set lockout duration to 60 minutes }
      - { ID: CCC, Value: 60, Command: 'net accounts /lockoutwindow:',
        LineIdx: 7, Strip: "Lockout observation window (minutes):",
        Desc: Set time before password attempts resets to 60 minutes }

# Init and get defaults
- name: Check if defaults were loaded for UN_AC_3F were loaded
  set_fact:
    Loaded_UN_AC_3F: "{{ 'UN_AC_3F' in MachineDefaults }}"

- name: Initialize UndoList
  set_fact:
    UndoList: "{{ UndoList + ['UN_AC_3F_'+item.ID] }}"
  loop: "{{ AC_3F_RegTasks |union(AC_3F_RightsTasks) |union(AC_3F_ComTasks) }}"
  when: "'UN_AC_3F' in UndoList"

- name: Get regedit defaults
  include_tasks: WinRegStat.yml
  vars:
    SecCat: UN
    TaskCat: AC_3F
    RegTasks: "{{ AC_3F_RegTasks }}"
  when: not Loaded_UN_AC_3F

- name: Get command defaults
  include_tasks: WinCommandDef.yml
  vars:
    SecCat: UN
    TaskCat: AC_3F
    ComTasks: "{{AC_3F_ComTasks}}"
  when: not Loaded_UN_AC_3F

  # Run tasks
- name: Run regedit tasks
  include_tasks: WinRegedit.yml
  vars:
    SecCat: UN
    TaskCat: AC_3F
  loop: "{{ AC_3F_RegTasks }}"
  loop_control:
    loop_var: RegTask

- name: Run user rights tasks # simultaneously saves defaults
  include_tasks: WinUserRights.yml
  vars:
    SecCat: UN
    TaskCat: AC_3F
    RightsTasks: "{{ AC_3F_RightsTasks }}"

- name: Run windows command tasks
  include_tasks: WinCommand.yml
  vars:
    SecCat: UN
    TaskCat: AC_3F
  loop: "{{ AC_3F_ComTasks }}"
  loop_control:
    loop_var: ComTask