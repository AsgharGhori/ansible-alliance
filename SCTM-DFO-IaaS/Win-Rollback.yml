---
# Test playbok for an Windows-Hardening rollback solution

- hosts: all
  become_method: runas
  vars:
    RegDefaultsPath: C:\AnsibleDefaultRegistry.yml
  tasks:

  # Retrieve the registry defaults file, or create if non-existent
  - name: WinRoll-A > Search for defaults file
    win_stat:
      path: "{{ RegDefaultsPath }}"
    register: PathResult

  - name: WinRoll-B > Populate reg key dictionary from file
    slurp: 
      src: "{{ RegDefaultsPath }}"
    register: DefaultsFile
    when: PathResult.stat.exists

  - name: WinRoll-C > Decode file contents into reg key dictionary
    set_fact:
      RegistryDefaults: "{{ DefaultsFile['content'] | b64decode }}" 
    when: PathResult.stat.exists

  - name: WinRoll-D > Create defaults file
    win_file:
      path: "{{ RegDefaultsPath }}"
      state: touch
    when: not PathResult.stat.exists

  - name: WinRoll-E > Create RegistryDefaults dictionary
    set_fact:
      RegistryDefaults: { 
        'Registry': 'Defaults' 
      }
    when: not PathResult.stat.exists

  # Include task categories
  - name: Get Unclassed AC-8 tasks
    include_tasks: UN_AC_8.yml
    when: skip_UN_AC_8 is not defined

  - name: Get Unclassed SC-5 tasks
    include_tasks: UN_SC_5.yml
    when: skip_UN_SC_5 is not defined

# # Task template
# - name: SecCat_TaskCat ID > Description
#   win_regedit:
#     path: RegistryPath
#     name: KeyName
#     data: "{{ SCTMData if undo_SecCat_TaskCat is not defined else RegistryDefaults.SecCat_TaskCat.ID }}"
#     type: DataType
#     state: "{{ absent if undo_SecCat_TaskCat is defined and RegistryDefaults.SecCat_TaskCat.ID == -1 else present }}"
#   when: not skip_SecCat_TaskCat_ID