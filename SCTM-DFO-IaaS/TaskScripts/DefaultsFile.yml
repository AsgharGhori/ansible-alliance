# Task Script
# Contains Tasks for loading the
# MachineDefaults dictionary or ensuring
# the creation of its file on the Linux
# host

# Expected vars/facts:
# - MachineDefaults {} (empty or populated)
# - MachineDefaultsPath
---
- name: Search for defaults file (Linux)
  stat:
    path: "{{ MachineDefaultsPath }}"
  register: PathResult
  when: hostvars[inventory_hostname].ansible_system == 'Linux'

- name: Search for defaults file (Windows)
  win_stat:
    path: "{{ MachineDefaultsPath }}"
  register: PathResult
  when: hostvars[inventory_hostname].ansible_system == 'Windows'

- name: Extract file data
  slurp: # SLUUUUURP
    src: "{{ MachineDefaultsPath }}"
  register: DefaultsFile
  when: PathResult.stat.exists

- name: Decode file contents into reg key dictionary
  set_fact:
    MachineDefaults: "{{ DefaultsFile['content'] | b64decode }}" 
  when: PathResult.stat.exists

- name: Reset MachineDefaults if empty # safety-check if file is empty
  set_fact:
    MachineDefaults: {}
  when: PathResult.stat.exists and MachineDefaults == ""

- name: Create defaults file (Linux)
  file:
    path: "{{ MachineDefaultsPath }}"
    state: touch
  when: not PathResult.stat.exists and
    hostvars[inventory_hostname].ansible_system == 'Linux'

- name: Create defaults file (Windows)
  win_file:
    path: "{{ MachineDefaultsPath }}"
    state: touch
  when: not PathResult.stat.exists and
    hostvars[inventory_hostname].ansible_system == 'Windows'