# == List Script ==
# Includes all the tasks that fall under
# the Unclassed AC-3 protocol requirements

# Expected vars/facts:
# - MachineDefaults {} (populated)
---
# Init task dictionaries
- name: Set AC-3 file task dictionaries
  set_fact:
    UN_AC_3_CreateTasks:
    - { Desc: Set 'message of the day' file,
      ID: A, Mode: '600', Path: /etc/motd,
      Content: "\n\t\t   Fisheries and Oceans Canada / Pêches et Océans Canada
      \n\n\t\tUnauthorized Access Prohibited / Accès non-autorisé interdit\n" }
    - { Desc: Set issue file,
      ID: B, Mode: '600', Path: /etc/issue,
      Content: "Ubuntu 18.04.2 LTS \\n \\l" }
    - { Desc: Set issue.net file,
      ID: C, Mode: '600', Path: /etc/issue.net,
      Content: "\t Unauthorized Access Prohibited / Acces non-autorise interdit" }
    UN_AC_3_ChmodTasks:
    - { Desc: Set 'update-motd.d' to recommended directory,
      ID: A, Mode: '755', Path: /etc/update-motd.d }
    # - { Desc: Set mode for files within /etc/update-motd.d/,
    #   ID: AA, Mode: '644', Path: /etc/update-motd.d/ }

# Init and get defaults
- name: Check if defaults for AC-3 were loaded
  set_fact:
    Loaded_UN_AC_3: "{{ 'UN_AC_3' in MachineDefaults }}"

- name: Initialize UndoList
  set_fact:
    UndoList: "{{ UndoList + ['UN_AC_3_'+item.ID] }}"
  loop: "{{ UN_AC_3_CreateTasks |union(UN_AC_3_ChmodTasks) }}"
  when: "'UN_AC_3' in UndoList"

# - name: Get AC-3 file defaults
#   include_tasks: TaskScripts/WinRegStat.yml
#   vars:
#     SecCat: UN
#     TaskCat: AC_3
#     RegTasks: "{{ UN_AC_3_RegTasks }}"
#   when: not Loaded_UN_AC_3

# Run tasks
- name: Run AC-3 create tasks
  include_tasks: TaskScripts/LinuxCreateFile.yml
  vars:
    SecCat: UN
    TaskCat: AC_3
  loop: "{{ UN_AC_3_CreateTasks }}"
  loop_control:
    loop_var: CreateTask

- name: Run AC-3 chmod tasks
  include_tasks: TaskScripts/LinuxChmod.yml
  vars:
    SecCat: UN
    TaskCat: AC_3
  loop: "{{ UN_AC_3_ChmodTasks }}"
  loop_control:
    loop_var: ChmodTask

# - name: UN_AC_3 A > Copying /etc/motd file (TBS compliance)
#   copy:
#     src: LinuxUnclassed/motd
#     dest: /etc/
#     owner: root
#     group: root
#     mode: 0600

# - name: UN_AC_3 A > Creating a motd file
#   file:
#     path: /etc/motd
#     state: "{{ 'touch' if 'UN_AC_3_A' not in UndoList else 'absent' }}"
#     mode: 0600
#   register: fileState
#   when: not 'UN_AC_3_A' in SkipList

# - name: UN_AC_3 B > Copying /etc/issue file (TBS compliance)
#   copy:
#     src: LinuxUnclassed/issue
#     dest: /etc/
#     owner: root
#     group: root
#     mode: 0600

# - name: UN_AC_3 C > Copying /etc/issue.net file (TBS compliance)
#   copy:
#     src: LinuxUnclassed/issue.net
#     dest: /etc/
#     owner: root
#     group: root
#     mode: 0600

# - name: Adding execute permission bit to the directory that stores
#     user login message files (TBS compliance)
#   file:
#     path: /etc/update-motd.d
#     mode: 0755
#   when: ansible_distribution == "Ubuntu"

# - name: Get all files in /etc/update-motd.d
#   find:
#     paths: /etc/update-motd.d
#     file_type: file
#     recurse: yes
#   register: motdfiles
#   when: ansible_distribution == "Ubuntu"

# - name: Removing execute permission bit from files that display messages
#     at user login (TBS compliance)
#   file:
#     path: "{{ item.path }}"
#     mode: 0644
#   with_items: "{{ motdfiles.files }}"
#   when: ansible_distribution == "Ubuntu"