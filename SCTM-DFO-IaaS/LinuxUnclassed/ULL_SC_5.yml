# == List Script ==
# Includes all the tasks that fall under the
# Unclassed-Low-Low SC-5 protocol requirements

# Expected vars/facts:
# - MachineDefaults {} (populated)
---
# Init task dictionaries
- name: Set SC-5 file editing tasks
  set_fact:
    ULL_SC_5_SwapTasks:
    - { Desc: Disable 'chargen' in config file,
      ID: A, Value: 'yes', Path: /etc/xinetd.conf,
      # "service.(chargen)\n{\n.+disable.+=.(yes|no)"
      Regex: "\"service\\s(chargen)\\n{\\n\\s+disable\\s+=\\s(yes|no)\"",
      Replace: "service chargen\n{\n        disable         = " }
    - { Desc: Disable 'echo' in config file,
      ID: B, Value: 'yes', Path: /etc/xinetd.conf,
      Regex: "service.(echo)\n{\n.+disable.+=.(yes|no)",
      Replace: "service echo\n{\n        disable         = " }

- name: Retrieve files from directories
  find:
    paths: /etc/xinetd.d
    file_type: file
    recurse: yes
  register: xinetdFiles

# - name: Dynamically append folder files to SwapTasks dictionary (chargen)
#   set_fact:
#     ULL_SC_5_SwapTasks: "{{ ULL_SC_5_SwapTasks + [{
#       'Desc': 'Disable chargen in config file',
#       'ID': 'A'+idx|string, 'Value': 'yes', 'Path': item.path,
#       'Regex': 'service\\s(chargen)\\n{\\n\\s+disable\\s+=\\s(yes|no)',
#       'Replace': 'service chargen\n{\n        disable         = ' }] }}"
#   loop: "{{ xinetdFiles }}"
#   loop_control:
#     index_var: idx

# - name: Dynamically append folder files to SwapTasks dictionary (echo)
#   set_fact:
#     ULL_SC_5_SwapTasks: "{{ ULL_SC_5_SwapTasks + [{
#       'Desc': 'Disable echo in config file',
#       'ID': 'B'+idx|string, 'Value': 'yes', 'Path': item.path,
#       'Regex': 'service\\s(echo)\\n{\\n\\s+disable\\s+=\\s(yes|no)',
#       'Replace': 'service echo\n{\n        disable         = ' }] }}"
#   loop: "{{ xinetdFiles }}"
#   loop_control:
#     index_var: idx

# Init and get defaults
- name: Check if defaults for SC-5 were loaded
  set_fact:
    Loaded_ULL_SC_5: "{{ 'ULL_SC_5' in MachineDefaults }}"

- name: Initialize UndoList
  set_fact:
    UndoList: "{{ UndoList + ['ULL_SC_5_'+item.ID] }}"
  loop: "{{ ULL_SC_5_SwapTasks }}"
  when: "'ULL_SC_5' in UndoList"

- name: Get SC-5 file replacement defaults
  include_tasks: TaskScripts/LinuxDefaultText.yml
  vars:
    SecCat: ULL
    TaskCat: SC_5
    SwapTasks: "{{ ULL_SC_5_SwapTasks }}"
  when: not Loaded_ULL_SC_5

# Run tasks
- name: Run SC-5 file editing tasks
  include_tasks: TaskScripts/LinuxReplace.yml
  vars:
    SecCat: ULL
    TaskCat: SC_5
  loop: "{{ ULL_SC_5_SwapTasks }}"
  loop_control:
    loop_var: SwapTask